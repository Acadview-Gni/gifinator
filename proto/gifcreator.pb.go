// Code generated by protoc-gen-go.
// source: proto/gifcreator.proto
// DO NOT EDIT!

/*
Package renderdemo is a generated protocol buffer package.

It is generated from these files:
	proto/gifcreator.proto
	proto/movie.proto
	proto/render.proto

It has these top-level messages:
	GifRequest
	GifResponse
	MakeMovieRequest
	MakeMovieResponse
	RenderRequest
	RenderResponse
*/
package renderdemo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GifRequest struct {
}

func (m *GifRequest) Reset()                    { *m = GifRequest{} }
func (m *GifRequest) String() string            { return proto.CompactTextString(m) }
func (*GifRequest) ProtoMessage()               {}
func (*GifRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GifResponse struct {
	// World-readable URL for created image.
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
}

func (m *GifResponse) Reset()                    { *m = GifResponse{} }
func (m *GifResponse) String() string            { return proto.CompactTextString(m) }
func (*GifResponse) ProtoMessage()               {}
func (*GifResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GifResponse) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*GifRequest)(nil), "renderdemo.GifRequest")
	proto.RegisterType((*GifResponse)(nil), "renderdemo.GifResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GifCreator service

type GifCreatorClient interface {
	CreateGif(ctx context.Context, in *GifRequest, opts ...grpc.CallOption) (*GifResponse, error)
}

type gifCreatorClient struct {
	cc *grpc.ClientConn
}

func NewGifCreatorClient(cc *grpc.ClientConn) GifCreatorClient {
	return &gifCreatorClient{cc}
}

func (c *gifCreatorClient) CreateGif(ctx context.Context, in *GifRequest, opts ...grpc.CallOption) (*GifResponse, error) {
	out := new(GifResponse)
	err := grpc.Invoke(ctx, "/renderdemo.GifCreator/CreateGif", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GifCreator service

type GifCreatorServer interface {
	CreateGif(context.Context, *GifRequest) (*GifResponse, error)
}

func RegisterGifCreatorServer(s *grpc.Server, srv GifCreatorServer) {
	s.RegisterService(&_GifCreator_serviceDesc, srv)
}

func _GifCreator_CreateGif_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GifRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GifCreatorServer).CreateGif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/renderdemo.GifCreator/CreateGif",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GifCreatorServer).CreateGif(ctx, req.(*GifRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GifCreator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "renderdemo.GifCreator",
	HandlerType: (*GifCreatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGif",
			Handler:    _GifCreator_CreateGif_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gifcreator.proto",
}

func init() { proto.RegisterFile("proto/gifcreator.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xcf, 0x4c, 0x4b, 0x2e, 0x4a, 0x4d, 0x2c, 0xc9, 0x2f, 0xd2, 0x03, 0x0b, 0x08,
	0x71, 0x15, 0xa5, 0xe6, 0xa5, 0xa4, 0x16, 0xa5, 0xa4, 0xe6, 0xe6, 0x2b, 0xf1, 0x70, 0x71, 0xb9,
	0x67, 0xa6, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x69, 0x71, 0x71, 0x83, 0x79, 0xc5,
	0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0xd2, 0x5c, 0x9c, 0x99, 0xb9, 0x89, 0xe9, 0xa9, 0xf1, 0xa5,
	0x45, 0x39, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x1c, 0x60, 0x81, 0xd0, 0xa2, 0x1c, 0x23,
	0x2f, 0xb0, 0x4e, 0x67, 0x88, 0xc9, 0x42, 0x36, 0x5c, 0x9c, 0x60, 0x66, 0xaa, 0x7b, 0x66, 0x9a,
	0x90, 0x98, 0x1e, 0xc2, 0x06, 0x3d, 0x84, 0xf1, 0x52, 0xe2, 0x18, 0xe2, 0x10, 0x8b, 0x9c, 0x78,
	0xa2, 0x90, 0xdc, 0x94, 0xc4, 0x06, 0x76, 0xa6, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xa1,
	0x15, 0xc5, 0xc0, 0x00, 0x00, 0x00,
}
